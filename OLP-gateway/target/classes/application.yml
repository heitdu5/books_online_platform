server:
  port: 5000
spring:
  cloud:
    gateway:
      globalcors:
        add-to-simple-url-handler-mapping: true
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - "http://localhost:3001"
            allowedMethods:
              - "GET"
              - "POST"
              - "DELETE"
              - "PUT"
              - "OPTIONS"
            allowedHeaders:
              - "Authorization"
              - "Content-Type"
              - "loginId"
              - "satoken"
            allowCredentials: true
            maxAge: 3600
      routes:
        - id: books
          uri: lb://yh-olp-books
          predicates:
            - Path=/books/**
          filters:
            - StripPrefix=1
        - id: oss
          uri: lb://yh-olp-oss
          predicates:
            - Path=/oss/**
          filters:
            - StripPrefix=1
        - id: users
          uri: lb://yh-olp-users
          predicates:
            - Path=/users/**
          filters:
            - StripPrefix=1
        - id: ws
          uri: lb://yh-olp-ws
          predicates:
            - Path=/ws/**
          filters:
            - StripPrefix=1
        - id: author
          uri: lb://yh-olp-author
          predicates:
            - Path=/author/**
          filters:
            - StripPrefix=1
        - id: auth
          uri: lb://yh-olp-auth
          predicates:
            - Path=/auth/**
          filters:
            - StripPrefix=1
      default-filters: #解决cors重复跨域问题
        - DedupeResponseHeader=Vary Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_FIRST
  redis:
    # Redis数据库索引（默认为0）
    database: 1
    # Redis服务器地址
    host: 192.168.232.112
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password: yh1234
    # 连接超时时间
    timeout: 2s
    lettuce:
      pool:
        # 连接池最大连接数
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 0
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: satoken
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: -1
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: random-32
  # 是否输出操作日志
  is-log: true
  is-read-cookie: false
  token-prefix: jichi